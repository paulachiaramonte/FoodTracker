// Generated by view binder compiler. Do not edit!
package com.example.foodtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.foodtracker.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMealPlanBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button ButtonNextWeek;

  @NonNull
  public final Button ButtonPreviousWeek;

  @NonNull
  public final Button CurrentWeekButton;

  @NonNull
  public final ListView DatesListView;

  @NonNull
  public final FloatingActionButton imageView4;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView4;

  private FragmentMealPlanBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button ButtonNextWeek, @NonNull Button ButtonPreviousWeek,
      @NonNull Button CurrentWeekButton, @NonNull ListView DatesListView,
      @NonNull FloatingActionButton imageView4, @NonNull TextView textView,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.ButtonNextWeek = ButtonNextWeek;
    this.ButtonPreviousWeek = ButtonPreviousWeek;
    this.CurrentWeekButton = CurrentWeekButton;
    this.DatesListView = DatesListView;
    this.imageView4 = imageView4;
    this.textView = textView;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMealPlanBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMealPlanBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_meal_plan, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMealPlanBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ButtonNextWeek;
      Button ButtonNextWeek = ViewBindings.findChildViewById(rootView, id);
      if (ButtonNextWeek == null) {
        break missingId;
      }

      id = R.id.ButtonPreviousWeek;
      Button ButtonPreviousWeek = ViewBindings.findChildViewById(rootView, id);
      if (ButtonPreviousWeek == null) {
        break missingId;
      }

      id = R.id.CurrentWeekButton;
      Button CurrentWeekButton = ViewBindings.findChildViewById(rootView, id);
      if (CurrentWeekButton == null) {
        break missingId;
      }

      id = R.id.DatesListView;
      ListView DatesListView = ViewBindings.findChildViewById(rootView, id);
      if (DatesListView == null) {
        break missingId;
      }

      id = R.id.imageView4;
      FloatingActionButton imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentMealPlanBinding((ConstraintLayout) rootView, ButtonNextWeek,
          ButtonPreviousWeek, CurrentWeekButton, DatesListView, imageView4, textView, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
